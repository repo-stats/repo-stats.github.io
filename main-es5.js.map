{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/packagist/packagist.component.ts","webpack:///src/app/packagist/packagist.component.html","webpack:///src/app/packagist/packagist.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","PoolCounter","_max","_step","PackagistComponent","packagistService","packageName","grouping","possibleGroupings","value","label","fromDate","Date","setMonth","getMonth","setDate","getDate","toDate","versions","undefined","totalDownloads","poolCounter","toISOString","substring","getPackageVersions","subscribe","length","versionsPromises","map","version","getPackageVersionDownloads","downloads","versionDownloads","increase","toPromise","all","versionsDownloads","reduce","previous","item","versionsMap","container","groupVersion","extractGroupedVersion","Object","sort","left","right","leftParts","split","rightParts","localeCompare","leftPart","rightPart","shift","leftInt","parseInt","rightInt","reverse","error","alert","JSON","stringify","console","groupedVersion","replace","check","PackagistService","http","name","get","data","packages","from","to","values","a","b","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,6CAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,YAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACI;;AACJ;;;;;;;;;wEDKaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA0CaC,S;;;;;cAAAA,S;AAAS,oBAFR,4DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBALT,CACT,8EADS,C;AAEV,kBAjBQ,CACP,uEADO,EAEP,4FAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,gFALO,EAMP,sEANO,EAOP,+EAPO,EAQP,0EARO,EASP,yEATO,EAUP,wEAVO,EAWP,oFAXO,CAiBR;;;;4HAGUA,S,EAAS;AAAA,yBAvBlB,4DAuBkB,EAtBlB,kFAsBkB;AAtBA,oBAGlB,uEAHkB,EAIlB,4FAJkB,EAKlB,0DALkB,EAMlB,qEANkB,EAOlB,gFAPkB,EAQlB,sEARkB,EASlB,+EATkB,EAUlB,0EAVkB,EAWlB,yEAXkB,EAYlB,wEAZkB,EAalB,oFAbkB;AAsBA,S;AATE,O;;;;;wEASXA,S,EAAS;gBAzBrB,sDAyBqB;iBAzBZ;AACRC,wBAAY,EAAE,CACZ,4DADY,EAEZ,kFAFY,CADN;AAKRC,mBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,gFALO,EAMP,sEANO,EAOP,+EAPO,EAQP,0EARO,EASP,yEATO,EAUP,wEAVO,EAWP,oFAXO,CALD;AAkBRT,mBAAO,EAAE,EAlBD;AAoBRU,qBAAS,EAAE,CACT,8EADS,CApBH;AAuBRC,qBAAS,EAAE,CAAC,4DAAD;AAvBH,W;AAyBY,U;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBY;;AACI;;AACJ;;;;;;AAF+D;;AAC3D;;AAAA;;;;;;AAUhB;;AACI;;AAAuE;;AAAG;;AAC1E;;AACJ;;;;;;AAFsB;;AAAA;;AAClB;;AAAA;;;;;;AAYI;;AACI;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAqB;;AACzB;;AAAI;;;;AAA+D;;AACvE;;;;;;;;AAHQ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAZhB;;AACI;;AACI;;AACI;;AAAI;;AAAO;;AACX;;AAAI;;AAAS;;AACb;;AAAI;;AAAC;;AACT;;AACJ;;AACA;;AACI;;AAKJ;;AACA;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAI;;AACZ;;AACJ;;AACJ;;;;;;AAbY;;AAAA;;AASI;;AAAA;;;;UDhDVC,W;AAGJ,6BAAoBC,IAApB,EAAkC;AAAA;;AAAd,eAAAA,IAAA,GAAAA,IAAA;AAFZ,eAAAC,KAAA,GAAQ,CAAR;AAE6B;;;;qCAUnB;AAChB,cAAE,KAAKA,KAAP;AACD;;;8BAViB;AAChB,mBAAO,KAAKA,KAAZ;AACD;;;8BAEgB;AACf,mBAAO,KAAKD,IAAZ;AACD;;;;;;UAiBUE,kB;AAmBX,oCACUC,gBADV,EAC4C;AAAA;;AAAlC,eAAAA,gBAAA,GAAAA,gBAAA;AAjBH,eAAAC,WAAA,GAAc,2BAAd;AAIA,eAAAC,QAAA,GAA8B,OAA9B;AACA,eAAAC,iBAAA,GAAoB,CACzB;AACEC,iBAAK,EAAE,OADT;AAEEC,iBAAK,EAAE;AAFT,WADyB,EAKzB;AACED,iBAAK,EAAE,OADT;AAEEC,iBAAK,EAAE;AAFT,WALyB,CAApB;AAcL,eAAKC,QAAL,GAAgB,IAAIC,IAAJ,EAAhB;AACA,eAAKD,QAAL,CAAcE,QAAd,CAAuB,KAAKF,QAAL,CAAcG,QAAd,KAA2B,CAAlD;AACA,eAAKH,QAAL,CAAcI,OAAd,CAAsB,KAAKJ,QAAL,CAAcK,OAAd,KAA0B,CAAhD;AAEA,eAAKC,MAAL,GAAc,IAAIL,IAAJ,EAAd;AACA,eAAKK,MAAL,CAAYF,OAAZ,CAAoB,KAAKE,MAAL,CAAYD,OAAZ,KAAwB,CAA5C;AACD;;;;qCAEiB,CACjB;;;kCAEc;AAAA;;AACb,iBAAKE,QAAL,GAAgBC,SAAhB;AACA,iBAAKC,cAAL,GAAsBD,SAAtB;AACA,iBAAKE,WAAL,GAAmBF,SAAnB;AAEA,gBAAMR,QAAQ,GAAG,KAAKA,QAAL,CAAcW,WAAd,GAA4BC,SAA5B,CAAsC,CAAtC,EAAyC,EAAzC,CAAjB;AACA,gBAAMN,MAAM,GAAG,KAAKA,MAAL,CAAYK,WAAZ,GAA0BC,SAA1B,CAAoC,CAApC,EAAuC,EAAvC,CAAf;AAEA,iBAAKlB,gBAAL,CAAsBmB,kBAAtB,CAAyC,KAAKlB,WAA9C,EAA2DmB,SAA3D,CACE,UAACP,QAAD,EAA8B;AAC5B,mBAAI,CAACG,WAAL,GAAmB,IAAIpB,WAAJ,CAAgBiB,QAAQ,CAACQ,MAAzB,CAAnB;AACA,kBAAMC,gBAAgB,GAAGT,QAAQ,CAACU,GAAT,CAAa,UAACC,OAAD,EAAgD;AACpF,uBAAO,KAAI,CAACxB,gBAAL,CAAsByB,0BAAtB,CAAiD,KAAI,CAACxB,WAAtD,EAAmEuB,OAAnE,EAA4ElB,QAA5E,EAAsFM,MAAtF,EACJW,GADI,CACA,UAACG,SAAD,EAAyC;AAC5C,yBAAO;AAAEF,2BAAO,EAAPA,OAAF;AAAWE,6BAAS,EAATA;AAAX,mBAAP;AACD,iBAHI,QAID,UAACC,gBAAD,EAA8C;AAChD,sBAAI,KAAI,CAACX,WAAT,EAAsB;AACpB,yBAAI,CAACA,WAAL,CAAiBY,QAAjB;AACD;AACF,iBARI,EASJC,SATI,EAAP;AAUD,eAXwB,CAAzB;AAaArD,qBAAO,CAACsD,GAAR,CAAYR,gBAAZ,EACG5C,IADH,CACQ,UAACqD,iBAAD,EAAiD;AACrD,qBAAI,CAAChB,cAAL,GAAsBgB,iBAAiB,CAACC,MAAlB,CACpB,UAACC,QAAD,EAAmBC,IAAnB;AAAA,yBAAuDD,QAAQ,GAAGC,IAAI,CAACR,SAAvE;AAAA,iBADoB,EAEpB,CAFoB,CAAtB;AAIA,oBAAMS,WAAW,GAAGJ,iBAAiB,CAACC,MAAlB,CAAyB,UAACI,SAAD,EAAgBF,IAAhB,EAA+C;AAC1F,sBAAMG,YAAY,GAAG,KAAI,CAACC,qBAAL,CAA2BJ,IAAI,CAACV,OAAhC,CAArB;;AACA,sBAAIV,SAAS,KAAKsB,SAAS,CAACC,YAAD,CAA3B,EAA2C;AACzCD,6BAAS,CAACC,YAAD,CAAT,GAA0B,CAA1B;AACD;;AACDD,2BAAS,CAACC,YAAD,CAAT,IAA2BH,IAAI,CAACR,SAAhC;AACA,yBAAOU,SAAP;AACD,iBAPmB,EAOjB,EAPiB,CAApB;AASA,qBAAI,CAACvB,QAAL,GAAgB0B,MAAM,CAACzD,IAAP,CAAYqD,WAAZ,EACbK,IADa,CACR,UAACC,IAAD,EAAeC,KAAf,EAAyC;AAC7C,sBAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAlB;AACA,sBAAMC,UAAU,GAAGH,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAnB;;AACA,sBAAID,SAAS,CAACtB,MAAV,KAAqBwB,UAAU,CAACxB,MAApC,EAA4C;AAC1C,2BAAOoB,IAAI,CAACK,aAAL,CAAmBJ,KAAnB,CAAP;AACD;;AAED,sBAAIK,QAAJ,EAAcC,SAAd;;AAEA,qBAAG;AACDD,4BAAQ,GAAGJ,SAAS,CAACM,KAAV,EAAX;AACAD,6BAAS,GAAGH,UAAU,CAACI,KAAX,EAAZ;AACD,mBAHD,QAGSF,QAAQ,KAAKC,SAHtB;;AAKA,sBAAME,OAAO,GAAGC,QAAQ,CAACJ,QAAD,EAAW,EAAX,CAAxB;AACA,sBAAMK,QAAQ,GAAGD,QAAQ,CAACH,SAAD,EAAY,EAAZ,CAAzB;AAEA,yBAAOE,OAAO,GAAGE,QAAjB;AACD,iBAnBa,EAoBbC,OApBa,GAqBb9B,GArBa,CAqBT,UAACC,OAAD,EAAuC;AAC1C,yBAAO;AACLA,2BAAO,EAAEA,OADJ;AAELE,6BAAS,EAAES,WAAW,CAACX,OAAD;AAFjB,mBAAP;AAID,iBA1Ba,CAAhB;AA2BD,eA1CH;AA4CD,aA5DH,EA6DE,UAAC8B,KAAD,EAAgB;AACdC,mBAAK,CAAC,cAAD,CAAL;AACAA,mBAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAD,CAAL;AACAI,qBAAO,CAACJ,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD,aAjEH;AAmED;;;gDAE6B9B,O,EAAiB;AAC7C,gBAAImC,cAAc,GAAGnC,OAAO,CAACoC,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,CAArB;;AAEA,gBAAI,YAAY,KAAK1D,QAArB,EAA+B;AAC7ByD,4BAAc,GAAGA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoC,MAApC,CAAjB;AACD,aAFD,MAEO;AACLD,4BAAc,GAAGA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,MAAzC,CAAjB;AACD;;AAED,mBAAOD,cAAP;AACD;;;;;;;yBAxHU5D,kB,EAAkB,oI;AAAA,O;;;cAAlBA,kB;AAAkB,sC;AAAA,iB;AAAA,gB;AAAA,woB;AAAA;AAAA;ACnC/B;;AAAI;;AAAoB;;AACxB;;AACI;;AACI;;AAAmD;AAAA;AAAA;;AAAnD;;AACJ;;AAEA;;AACI;;AAAgF;AAAA;AAAA;;AAAhF;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAA4E;AAAA;AAAA;;AAA5E;;AACA;;AACA;;AACJ;;AAEA;;AACI;;AAAW;;AAAe;;AAC1B;;AAAY;AAAA;AAAA;;AACR;;AAGJ;;AACJ;;AAEA;;AAEA;;AAA0B;AAAA,qBAAS,IAAA8D,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAK;;AACrD;;AAEA;;AAKA;;;;;;;;AAlC2D;;AAAA;;AAInC;;AAAA,2FAA6B,SAA7B,EAA6B,YAA7B;;AACiB;;AAAA;;AAKjB;;AAAA,2FAA2B,SAA3B,EAA2B,UAA3B;;AACiB;;AAAA;;AAMrB;;AAAA;;AACI;;AAAA;;AAWnB;;AAAA;;AAKE;;AAAA;;;;;;;;;;wEDFM9D,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTX,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;AEnC/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBawE,gB;AACX,kCACUC,IADV,EAC0B;AAAA;;AAAhB,eAAAA,IAAA,GAAAA,IAAA;AACL;;;;6CAEqBC,I,EAAY;AACpC,mBAAO,KAAKD,IAAL,CAAUE,GAAV,mCACsBD,IADtB,YAELzC,GAFK,CAED,UAAC2C,IAAD,EAA+C;AACnD,qBAAO3B,MAAM,CAACzD,IAAP,CAAYoF,IAAI,CAACC,QAAL,CAAcH,IAAd,CAAZ,CAAP;AACD,aAJM,CAAP;AAKD;;;qDAEiCA,I,EAAcxC,O,EAAiB4C,I,EAAcC,E,EAAU;AACvF,mBAAO,KAAKN,IAAL,CAAUE,GAAV,0CAC6BD,IAD7B,oBAC2CxC,OAD3C,sCAC8E4C,IAD9E,iBACyFC,EADzF,GAEL9C,GAFK,CAED,UAAC2C,IAAD,EAAuB;AAC3B,qBAAOA,IAAI,CAACI,MAAL,CAAY9C,OAAZ,EACJD,GADI,CACA,UAACgD,CAAD,EAAmD;AACtD,oBAAI,CAACA,CAAL,EAAQ;AACN,yBAAO,CAAP;AACD;;AAED,oBAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,yBAAOpB,QAAQ,CAACoB,CAAD,EAAI,EAAJ,CAAf;AACD;;AAED,uBAAOA,CAAP;AACD,eAXI,EAYJvC,MAZI,CAYG,UAACuC,CAAD,EAAYC,CAAZ;AAAA,uBAAkCD,CAAC,GAAGC,CAAtC;AAAA,eAZH,EAY4C,CAZ5C,CAAP;AAaD,aAhBM,CAAP;AAiBD;;;;;;;yBA/BUV,gB,EAAgB,uH;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEO,UAAMW,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBC,eAAzB,CAAyC,yDAAzC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'repo-stats';\n}\n","<div>\n    <app-packagist></app-packagist>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { AppComponent } from './app.component';\nimport { PackagistComponent } from './packagist/packagist.component';\nimport { PackagistService } from './packagist/packagist.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PackagistComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatProgressBarModule,\n  ],\n  exports: [\n  ],\n  providers: [\n    PackagistService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n  PackagistService,\n} from './packagist.service';\nimport ResolvedNumberFormatOptions = Intl.ResolvedNumberFormatOptions;\n\nclass PoolCounter {\n  private _step = 0;\n\n  constructor(private _max: number) { }\n\n  public get step() {\n    return this._step;\n  }\n\n  public get max() {\n    return this._max;\n  }\n\n  public increase() {\n    ++this._step;\n  }\n}\n\ninterface VersionDownloads {\n  version: string;\n  downloads: number;\n}\n\n@Component({\n  selector: 'app-packagist',\n  templateUrl: './packagist.component.html',\n  styleUrls: ['./packagist.component.scss']\n})\nexport class PackagistComponent implements OnInit {\n  public fromDate: Date;\n  public toDate: Date;\n  public packageName = 'friendsofphp/php-cs-fixer';\n  public versions: VersionDownloads[] | undefined;\n  public poolCounter: PoolCounter | undefined;\n  public totalDownloads: number | undefined;\n  public grouping: 'MAJOR' | 'MINOR' = 'MINOR';\n  public possibleGroupings = [\n    {\n      value: 'MAJOR',\n      label: 'MAJOR',\n    },\n    {\n      value: 'MINOR',\n      label: 'MINOR',\n    },\n  ];\n\n  public constructor(\n    private packagistService: PackagistService,\n  ) {\n    this.fromDate = new Date();\n    this.fromDate.setMonth(this.fromDate.getMonth() - 1);\n    this.fromDate.setDate(this.fromDate.getDate() - 7);\n\n    this.toDate = new Date();\n    this.toDate.setDate(this.toDate.getDate() - 7);\n  }\n\n  public ngOnInit() {\n  }\n\n  public check() {\n    this.versions = undefined;\n    this.totalDownloads = undefined;\n    this.poolCounter = undefined;\n\n    const fromDate = this.fromDate.toISOString().substring(0, 10);\n    const toDate = this.toDate.toISOString().substring(0, 10);\n\n    this.packagistService.getPackageVersions(this.packageName).subscribe(\n      (versions: string[]): void => {\n        this.poolCounter = new PoolCounter(versions.length);\n        const versionsPromises = versions.map((version: string): Promise<VersionDownloads> => {\n          return this.packagistService.getPackageVersionDownloads(this.packageName, version, fromDate, toDate)\n            .map((downloads: number): VersionDownloads => {\n              return { version, downloads };\n            })\n            .do((versionDownloads: VersionDownloads): void => {\n              if (this.poolCounter) {\n                this.poolCounter.increase();\n              }\n            })\n            .toPromise();\n        });\n\n        Promise.all(versionsPromises)\n          .then((versionsDownloads: VersionDownloads[]): void => {\n            this.totalDownloads = versionsDownloads.reduce(\n              (previous: number, item: VersionDownloads): number => (previous + item.downloads),\n              0,\n            );\n            const versionsMap = versionsDownloads.reduce((container: {}, item: VersionDownloads): {} => {\n              const groupVersion = this.extractGroupedVersion(item.version);\n              if (undefined === container[groupVersion]) {\n                container[groupVersion] = 0;\n              }\n              container[groupVersion] += item.downloads;\n              return container;\n            }, {});\n\n            this.versions = Object.keys(versionsMap)\n              .sort((left: string, right: string): number => {\n                const leftParts = left.split('.');\n                const rightParts = right.split('.');\n                if (leftParts.length !== rightParts.length) {\n                  return left.localeCompare(right);\n                }\n\n                let leftPart, rightPart;\n\n                do {\n                  leftPart = leftParts.shift();\n                  rightPart = rightParts.shift();\n                } while (leftPart === rightPart);\n\n                const leftInt = parseInt(leftPart, 10);\n                const rightInt = parseInt(rightPart, 10);\n\n                return leftInt - rightInt;\n              })\n              .reverse()\n              .map((version: string): VersionDownloads => {\n                return {\n                  version: version,\n                  downloads: versionsMap[version],\n                };\n              });\n          });\n\n      },\n      (error: any) => {\n        alert('error happen');\n        alert(JSON.stringify(error));\n        console.error('error', error);\n      }\n    );\n  }\n\n  private extractGroupedVersion(version: string) {\n    let groupedVersion = version.replace(/^v/, '');\n\n    if ('MAJOR' === this.grouping) {\n      groupedVersion = groupedVersion.replace(/^(\\d+).*$/, '$1.*');\n    } else {\n      groupedVersion = groupedVersion.replace(/^(\\d+\\.\\d+).*$/, '$1.*');\n    }\n\n    return groupedVersion;\n  }\n}\n","<h2>Packagist repo stats</h2>\n<form>\n    <mat-form-field>\n        <input matInput placeholder=\"Provide package name\" [(ngModel)]=\"packageName\" name=\"packageName\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"picker_from\" placeholder=\"Choose a start date\" [(ngModel)]=\"fromDate\" name=\"fromDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker_from\"></mat-datepicker-toggle>\n        <mat-datepicker #picker_from></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"picker_to\" placeholder=\"Choose a end date\" [(ngModel)]=\"toDate\" name=\"toDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker_to\"></mat-datepicker-toggle>\n        <mat-datepicker #picker_to></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Choose grouping</mat-label>\n        <mat-select [(value)]=\"grouping\">\n            <mat-option *ngFor=\"let possibleGrouping of possibleGroupings\" [value]=\"possibleGrouping.value\">\n                {{possibleGrouping.label}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <br>\n\n    <button mat-raised-button (click)=\"check()\">Check</button>\n</form>\n\n<div *ngIf=\"poolCounter\" class=\"progress\">\n    <mat-progress-bar [value]=\"(100 * poolCounter.step / poolCounter.max)\">aaa</mat-progress-bar>\n    {{poolCounter.step}} of {{poolCounter.max}}\n</div>\n\n<table *ngIf=\"versions\">\n    <thead>\n        <tr>\n            <th>version</th>\n            <th>downloads</th>\n            <th>%</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let version of versions\">\n            <td>{{version.version}}</td>\n            <td>{{version.downloads}}</td>\n            <td>{{(100 * version.downloads / totalDownloads) | number:'1.2-2'}}</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td>Total</td>\n            <td>{{ totalDownloads }}</td>\n            <td>100%</td>\n        </tr>\n    </tfoot>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\ninterface VersionInfo {\n  version: string;\n}\n\ninterface VersionsCollection {\n  [K: string]: VersionInfo;\n}\n\ninterface PackageVersionsCollection {\n  packages: {\n    [packageName: string]: VersionsCollection;\n  };\n}\n\n@Injectable()\nexport class PackagistService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public getPackageVersions(name: string): Observable<string[]> {\n    return this.http.get(\n      `https://packagist.org/p/${name}.json`,\n    ).map((data: PackageVersionsCollection): string[] => {\n      return Object.keys(data.packages[name]);\n    });\n  }\n\n  public getPackageVersionDownloads(name: string, version: string, from: string, to: string): Observable<number> {\n    return this.http.get(\n      `https://packagist.org/packages/${name}/stats/${version}.json?average=daily&from=${from}&to=${to}`\n    ).map((data: any): number => {\n      return data.values[version]\n        .map((a: null | undefined | string | number): number => {\n          if (!a) {\n            return 0;\n          }\n\n          if (typeof a === 'string') {\n            return parseInt(a, 10);\n          }\n\n          return a;\n        })\n        .reduce((a: number, b: number): number => a + b, 0);\n    });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'rxjs/Rx';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}