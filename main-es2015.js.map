{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/packagist/packagist.component.ts","./src/app/packagist/packagist.component.html","./src/app/packagist/packagist.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'repo-stats';\n}\n","<div>\n    <app-packagist></app-packagist>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { AppComponent } from './app.component';\nimport { PackagistComponent } from './packagist/packagist.component';\nimport { PackagistService } from './packagist/packagist.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PackagistComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatProgressBarModule,\n  ],\n  exports: [\n  ],\n  providers: [\n    PackagistService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport {\n  PackagistService,\n} from './packagist.service';\nimport ResolvedNumberFormatOptions = Intl.ResolvedNumberFormatOptions;\n\nclass PoolCounter {\n  private _step = 0;\n\n  constructor(private _max: number) { }\n\n  public get step() {\n    return this._step;\n  }\n\n  public get max() {\n    return this._max;\n  }\n\n  public increase() {\n    ++this._step;\n  }\n}\n\ninterface VersionDownloads {\n  version: string;\n  downloads: number;\n}\n\n@Component({\n  selector: 'app-packagist',\n  templateUrl: './packagist.component.html',\n  styleUrls: ['./packagist.component.scss']\n})\nexport class PackagistComponent implements OnInit {\n  public fromDate: Date;\n  public toDate: Date;\n  public packageName = 'friendsofphp/php-cs-fixer';\n  public versions: VersionDownloads[] | undefined;\n  public poolCounter: PoolCounter | undefined;\n  public totalDownloads: number | undefined;\n  public grouping: 'MAJOR' | 'MINOR' = 'MINOR';\n  public possibleGroupings = [\n    {\n      value: 'MAJOR',\n      label: 'MAJOR',\n    },\n    {\n      value: 'MINOR',\n      label: 'MINOR',\n    },\n  ];\n\n  public constructor(\n    private packagistService: PackagistService,\n  ) {\n    this.fromDate = new Date();\n    this.fromDate.setMonth(this.fromDate.getMonth() - 1);\n    this.fromDate.setDate(this.fromDate.getDate() - 7);\n\n    this.toDate = new Date();\n    this.toDate.setDate(this.toDate.getDate() - 7);\n  }\n\n  public ngOnInit() {\n  }\n\n  public check() {\n    this.versions = undefined;\n    this.totalDownloads = undefined;\n    this.poolCounter = undefined;\n\n    const fromDate = this.fromDate.toISOString().substring(0, 10);\n    const toDate = this.toDate.toISOString().substring(0, 10);\n\n    this.packagistService.getPackageVersions(this.packageName).subscribe(\n      (versions: string[]): void => {\n        this.poolCounter = new PoolCounter(versions.length);\n        const versionsPromises = versions.map((version: string): Promise<VersionDownloads> => {\n          return this.packagistService.getPackageVersionDownloads(this.packageName, version, fromDate, toDate)\n            .map((downloads: number): VersionDownloads => {\n              return { version, downloads };\n            })\n            .do((versionDownloads: VersionDownloads): void => {\n              if (this.poolCounter) {\n                this.poolCounter.increase();\n              }\n            })\n            .toPromise();\n        });\n\n        Promise.all(versionsPromises)\n          .then((versionsDownloads: VersionDownloads[]): void => {\n            this.totalDownloads = versionsDownloads.reduce(\n              (previous: number, item: VersionDownloads): number => (previous + item.downloads),\n              0,\n            );\n            const versionsMap = versionsDownloads.reduce((container: {}, item: VersionDownloads): {} => {\n              const groupVersion = this.extractGroupedVersion(item.version);\n              if (undefined === container[groupVersion]) {\n                container[groupVersion] = 0;\n              }\n              container[groupVersion] += item.downloads;\n              return container;\n            }, {});\n\n            this.versions = Object.keys(versionsMap)\n              .sort((left: string, right: string): number => {\n                const leftParts = left.split('.');\n                const rightParts = right.split('.');\n                if (leftParts.length !== rightParts.length) {\n                  return left.localeCompare(right);\n                }\n\n                let leftPart, rightPart;\n\n                do {\n                  leftPart = leftParts.shift();\n                  rightPart = rightParts.shift();\n                } while (leftPart === rightPart);\n\n                const leftInt = parseInt(leftPart, 10);\n                const rightInt = parseInt(rightPart, 10);\n\n                return leftInt - rightInt;\n              })\n              .reverse()\n              .map((version: string): VersionDownloads => {\n                return {\n                  version: version,\n                  downloads: versionsMap[version],\n                };\n              });\n          });\n\n      },\n      (error: any) => {\n        alert('error happen');\n        alert(JSON.stringify(error));\n        console.error('error', error);\n      }\n    );\n  }\n\n  private extractGroupedVersion(version: string) {\n    let groupedVersion = version.replace(/^v/, '');\n\n    if ('MAJOR' === this.grouping) {\n      groupedVersion = groupedVersion.replace(/^(\\d+).*$/, '$1.*');\n    } else {\n      groupedVersion = groupedVersion.replace(/^(\\d+\\.\\d+).*$/, '$1.*');\n    }\n\n    return groupedVersion;\n  }\n}\n","<h2>Packagist repo stats</h2>\n<form>\n    <mat-form-field>\n        <input matInput placeholder=\"Provide package name\" [(ngModel)]=\"packageName\" name=\"packageName\">\n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"picker_from\" placeholder=\"Choose a start date\" [(ngModel)]=\"fromDate\" name=\"fromDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker_from\"></mat-datepicker-toggle>\n        <mat-datepicker #picker_from></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"picker_to\" placeholder=\"Choose a end date\" [(ngModel)]=\"toDate\" name=\"toDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker_to\"></mat-datepicker-toggle>\n        <mat-datepicker #picker_to></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Choose grouping</mat-label>\n        <mat-select [(value)]=\"grouping\">\n            <mat-option *ngFor=\"let possibleGrouping of possibleGroupings\" [value]=\"possibleGrouping.value\">\n                {{possibleGrouping.label}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n\n    <br>\n\n    <button mat-raised-button (click)=\"check()\">Check</button>\n</form>\n\n<div *ngIf=\"poolCounter\" class=\"progress\">\n    <mat-progress-bar [value]=\"(100 * poolCounter.step / poolCounter.max)\">aaa</mat-progress-bar>\n    {{poolCounter.step}} of {{poolCounter.max}}\n</div>\n\n<table *ngIf=\"versions\">\n    <thead>\n        <tr>\n            <th>version</th>\n            <th>downloads</th>\n            <th>%</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let version of versions\">\n            <td>{{version.version}}</td>\n            <td>{{version.downloads}}</td>\n            <td>{{(100 * version.downloads / totalDownloads) | number:'1.2-2'}}</td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td>Total</td>\n            <td>{{ totalDownloads }}</td>\n            <td>100%</td>\n        </tr>\n    </tfoot>\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\ninterface VersionInfo {\n  version: string;\n}\n\ninterface VersionsCollection {\n  [K: string]: VersionInfo;\n}\n\ninterface PackageVersionsCollection {\n  packages: {\n    [packageName: string]: VersionsCollection;\n  };\n}\n\n@Injectable()\nexport class PackagistService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public getPackageVersions(name: string): Observable<string[]> {\n    return this.http.get(\n      `https://packagist.org/p/${name}.json`,\n    ).map((data: PackageVersionsCollection): string[] => {\n      return Object.keys(data.packages[name]);\n    });\n  }\n\n  public getPackageVersionDownloads(name: string, version: string, from: string, to: string): Observable<number> {\n    return this.http.get(\n      `https://packagist.org/packages/${name}/stats/${version}.json?average=daily&from=${from}&to=${to}`\n    ).map((data: any): number => {\n      return data.values[version]\n        .map((a: null | undefined | string | number): number => {\n          if (!a) {\n            return 0;\n          }\n\n          if (typeof a === 'string') {\n            return parseInt(a, 10);\n          }\n\n          return a;\n        })\n        .reduce((a: number, b: number): number => a + b, 0);\n    });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'rxjs/Rx';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}